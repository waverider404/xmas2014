/*!
 * @author yomotsu http://yomotsu.net/
 * MIT License
 */
var THREEFIELD={},jiban={};THREEFIELD.normalizeAngle=function(a){return a>=0?a%360:a%360+360},THREEFIELD.howCloseBetweenAngles=function(a,b){var c=Math.min(THREEFIELD.normalizeAngle(a-b),THREEFIELD.normalizeAngle(b-a));return c},THREEFIELD.triangle={},THREEFIELD.triangle.makeBoundingBox=function(a){var b=new THREE.Box3;return b.min=b.min.min(a.a),b.min=b.min.min(a.b),b.min=b.min.min(a.c),b.max=b.max.max(a.a),b.max=b.max.max(a.b),b.max=b.max.max(a.c),b},THREEFIELD.triangle.makeBoundingSphere=function(a,b){var c,d,e,f,g,h,i,j=new THREE.Sphere,k=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3;return l.subVectors(a.b,a.a),m.subVectors(a.c,a.a),l.dot(m)<=0?(j.center.addVectors(a.b,a.c).divideScalar(2),j.radius=k.subVectors(a.b,a.c).length()/2,j):(l.subVectors(a.a,a.b),m.subVectors(a.c,a.b),l.dot(m)<=0?(j.center.addVectors(a.a,a.c).divideScalar(2),j.radius=k.subVectors(a.a,a.c).length()/2,j):(l.subVectors(a.a,a.c),m.subVectors(a.b,a.c),l.dot(m)<=0?(j.center.addVectors(a.a,a.b).divideScalar(2),j.radius=k.subVectors(a.a,a.b).length()/2,j):(b||(b=a.normal()),l.crossVectors(k.subVectors(a.c,a.b),b),m.crossVectors(k.subVectors(a.c,a.a),b),n.addVectors(a.c,a.b).multiplyScalar(.5),o.addVectors(a.c,a.a).multiplyScalar(.5),c=l.dot(m),d=l.dot(l),f=m.dot(m),e=-k.subVectors(o,n).dot(l),g=-k.subVectors(o,n).dot(m),h=-c*c+d*f,i=(-e*f+c*g)/h,j.center=n.clone().add(l.clone().multiplyScalar(i)),j.radius=k.subVectors(j.center,a.a).length(),j)))},function(a,b){"use strict";b.collision={},b.collision.isIntersectionAABBPlane=function(b,c){var d=(new a.Vector3).addVectors(b.max,b.min).multiplyScalar(.5),e=(new a.Vector3).subVectors(b.max,d),f=e.x*Math.abs(c.normal.x)+e.y*Math.abs(c.normal.y)+e.z*Math.abs(c.normal.z),g=c.normal.dot(d)-c.constant;return Math.abs(g)<=f},b.collision.isIntersectionTriangleAABB=function(c,d,e,f){var g,h,i,j,k=(new a.Vector3).addVectors(f.max,f.min).multiplyScalar(.5),l=(new a.Vector3).subVectors(f.max,k),m=(new a.Vector3).subVectors(c,k),n=(new a.Vector3).subVectors(d,k),o=(new a.Vector3).subVectors(e,k),p=(new a.Vector3).subVectors(n,m),q=(new a.Vector3).subVectors(o,n),r=(new a.Vector3).subVectors(m,o),s=new a.Vector3(0,-p.z,p.y),t=new a.Vector3(0,-q.z,q.y),u=new a.Vector3(0,-r.z,r.y),v=new a.Vector3(p.z,0,-p.x),w=new a.Vector3(q.z,0,-q.x),x=new a.Vector3(r.z,0,-r.x),y=new a.Vector3(-p.y,p.x,0),z=new a.Vector3(-q.y,q.x,0),A=new a.Vector3(-r.y,r.x,0);if(g=m.dot(s),h=n.dot(s),i=o.dot(s),j=l.y*Math.abs(p.z)+l.z*Math.abs(p.y),Math.max(-Math.max(g,h,i),Math.min(g,h,i))>j)return!1;if(g=m.dot(t),h=n.dot(t),i=o.dot(t),j=l.y*Math.abs(q.z)+l.z*Math.abs(q.y),Math.max(-Math.max(g,h,i),Math.min(g,h,i))>j)return!1;if(g=m.dot(u),h=n.dot(u),i=o.dot(u),j=l.y*Math.abs(r.z)+l.z*Math.abs(r.y),Math.max(-Math.max(g,h,i),Math.min(g,h,i))>j)return!1;if(g=m.dot(v),h=n.dot(v),i=o.dot(v),j=l.x*Math.abs(p.z)+l.z*Math.abs(p.x),Math.max(-Math.max(g,h,i),Math.min(g,h,i))>j)return!1;if(g=m.dot(w),h=n.dot(w),i=o.dot(w),j=l.x*Math.abs(q.z)+l.z*Math.abs(q.x),Math.max(-Math.max(g,h,i),Math.min(g,h,i))>j)return!1;if(g=m.dot(x),h=n.dot(x),i=o.dot(x),j=l.x*Math.abs(r.z)+l.z*Math.abs(r.x),Math.max(-Math.max(g,h,i),Math.min(g,h,i))>j)return!1;if(g=m.dot(y),h=n.dot(y),i=o.dot(y),j=l.x*Math.abs(p.y)+l.y*Math.abs(p.x),Math.max(-Math.max(g,h,i),Math.min(g,h,i))>j)return!1;if(g=m.dot(z),h=n.dot(z),i=o.dot(z),j=l.x*Math.abs(q.y)+l.y*Math.abs(q.x),Math.max(-Math.max(g,h,i),Math.min(g,h,i))>j)return!1;if(g=m.dot(A),h=n.dot(A),i=o.dot(A),j=l.x*Math.abs(r.y)+l.y*Math.abs(r.x),Math.max(-Math.max(g,h,i),Math.min(g,h,i))>j)return!1;if(Math.max(m.x,n.x,o.x)<-l.x||Math.min(m.x,n.x,o.x)>l.x)return!1;if(Math.max(m.y,n.y,o.y)<-l.y||Math.min(m.y,n.y,o.y)>l.y)return!1;if(Math.max(m.z,n.z,o.z)<-l.z||Math.min(m.z,n.z,o.z)>l.z)return!1;var B=new a.Plane;return B.normal=(new a.Vector3).copy(q).cross(p).normalize(),B.constant=B.normal.dot(c),b.collision.isIntersectionAABBPlane(f,B)},b.collision.isIntersectionSphereSphere=function(a,b){var c=a.radius+b.radius;return a.center.distanceToSquared(b.center)<=c*c},b.collision.isIntersectionSphereAABB=function(a,b){var c=0;return a.center.x<b.min.x&&(c+=(b.min.x-a.center.x)*(b.min.x-a.center.x)),a.center.x>b.max.x&&(c+=(a.center.x-b.max.x)*(a.center.x-b.max.x)),a.center.y<b.min.y&&(c+=(b.min.y-a.center.y)*(b.min.y-a.center.y)),a.center.y>b.max.y&&(c+=(a.center.y-b.max.y)*(a.center.y-b.max.y)),a.center.z<b.min.z&&(c+=(b.min.z-a.center.z)*(b.min.z-a.center.z)),a.center.z>b.max.z&&(c+=(a.center.z-b.max.z)*(a.center.z-b.max.z)),c<=a.radius*a.radius},b.collision.isIntersectionSphereTriangle=function(b,c,d,e,f){var g,h,i,j=new a.Vector3,k=new a.Vector3,l=new a.Vector3,m=new a.Vector3;if(j.subVectors(c,b.center),k.subVectors(d,b.center),l.subVectors(e,b.center),g=b.radius*b.radius,m.crossVectors(k.clone().sub(j),l.clone().sub(j)),h=j.dot(m),i=m.dot(m),h*h>g*i)return!1;var n,o,p,q,r,s;if(n=j.dot(j),o=j.dot(k),p=j.dot(l),q=k.dot(k),r=k.dot(l),s=l.dot(l),n>g&o>n&p>n||q>g&o>q&r>q||s>g&p>s&r>s)return!1;var t,u,v,w,x,y,z=new a.Vector3,A=new a.Vector3,B=new a.Vector3,C=new a.Vector3,D=new a.Vector3,E=new a.Vector3,F=new a.Vector3,G=new a.Vector3,H=new a.Vector3;if(z.subVectors(k,j),A.subVectors(l,k),B.subVectors(j,l),t=o-n,u=r-q,v=p-s,w=z.dot(z),x=A.dot(A),y=B.dot(B),C.subVectors(j.multiplyScalar(w),z.multiplyScalar(t)),D.subVectors(k.multiplyScalar(x),A.multiplyScalar(u)),E.subVectors(l.multiplyScalar(y),B.multiplyScalar(v)),F.subVectors(l.multiplyScalar(w),C),G.subVectors(j.multiplyScalar(x),D),H.subVectors(k.multiplyScalar(y),E),C.dot(C)>g*w*w&&C.dot(F)>=0||D.dot(D)>g*x*x&&D.dot(G)>=0||E.dot(E)>g*y*y&&E.dot(H)>=0)return!1;var I=Math.sqrt(h*h/i)-b.radius-1,J=new a.Vector3,K=new a.Vector3(-f.x,-f.y,-f.z);return J.copy(b.center).add(K.multiplyScalar(I)),{distance:I,contactPoint:J}},b.collision.testSegmentTriangle=function(a,b,c,d,e){var f=d.clone().sub(c),g=e.clone().sub(c),h=a.clone().sub(b),i=f.clone().cross(g),j=h.dot(i);if(0>=j)return!1;var k=a.clone().sub(c),l=k.dot(i);if(0>l)return 0;if(l>j)return 0;var m=h.clone().cross(k),n=g.dot(m);if(0>n||n>j)return 0;var o=-1*f.clone().dot(m);if(0>o||n+o>j)return 0;var p=1/j;l*=p,n*=p,o*=p;var q=1-n-o,r=c.clone().multiplyScalar(q),s=d.clone().multiplyScalar(n),t=e.clone().multiplyScalar(o),u=r.clone().add(s).add(t);return{contactPoint:u}}}(THREE,THREEFIELD),THREEFIELD.World=function(){console.log("THREEFIELD.World"),this.colliders=[],this.characters=[]},THREEFIELD.World.prototype.add=function(a){this.colliders.push(a)},THREEFIELD.World.prototype.addCharacter=function(a){this.characters.push(a)},THREEFIELD.World.prototype.step=function(a){var b,c,d,e,f,g,h,i,j;for(g=0,i=this.characters.length;i>g;g++){for(b=this.characters[g],h=0,j=this.colliders.length;j>h;h++)c=this.colliders[h],d=new THREE.Sphere(b.center,b.radius+b.groundPadding),e=c.getIntersectedNodes(d,c.maxDepth),f=THREEFIELD.Octree.uniqTriangkesfromNodes(e);b.collisionCandidate=f,b.update(a)}},function(a,b){"use strict";b.Octree=function(c,d,e){this.min=c,this.max=d,this.maxDepth=e,this.nodes=[];var f,g,h,i,j,k,l,m,n,o=new a.Vector3,p=new a.Vector3,q=new a.Vector3;for(h=0;h<this.maxDepth;h++)for(this.nodes.push([]),j=Math.pow(2,h),k=Math.pow(4,h),o.subVectors(this.max,this.min).divideScalar(j),f=0,g=Math.pow(8,h);g>f;f++)l=f%j,m=f/k|0,n=(f/j|0)%j,p.set(this.min.x+l*o.x,this.min.y+m*o.y,this.min.z+n*o.z),q.copy(p).add(o),i=b.Octree.getMortonNumber(l,m,n),this.nodes[h][i]=new b.OctreeNode(this,h,i,p,q)},b.Octree.prototype={constructor:b.Octree,importThreeMesh:function(a){a.updateMatrix();var c,d,e,f,g,f=a.geometry.uuid;for(e=a.geometry.clone(),e.applyMatrix(a.matrix),e.computeFaceNormals(),e.computeVertexNormals(),c=0,d=e.faces.length;d>c;c++)g=new b.Face(e.vertices[e.faces[c].a],e.vertices[e.faces[c].b],e.vertices[e.faces[c].c],e.faces[c].normal,f),this.addFace(g)},addFace:function(a){var c,d,e,f,g,h,i=[],j=[];for(i=this.nodes[0].slice(0),c=0,e=this.maxDepth;e>c;c++){for(d=0,f=i.length;f>d;d++)g=i[d],h=b.collision.isIntersectionTriangleAABB(a.a,a.b,a.c,g),h&&(g.trianglePool.push(a),c+1!==this.maxDepth&&(j=j.concat(g.getChildNodes())));if(0===j.length)break;i=j.slice(0),j.length=0}},removeFace:function(){},getIntersectedNodes:function(a,c){var d,e,f,g,h,i,j,k=[],l=[],m=[];if(i=b.collision.isIntersectionSphereAABB(a,this),!i)return[];for(k=this.nodes[0].slice(0),d=0,f=c;f>d;d++){for(e=0,g=k.length;g>e;e++)h=k[e],i=b.collision.isIntersectionSphereAABB(a,h),i&&(j=d+1===c,j?0!==h.trianglePool.length&&m.push(h):l=l.concat(h.getChildNodes()));k=l.slice(0),l.length=0}return m}},b.Octree.separate3Bit=function(a){return a=61455&(a|a<<8),a=798915&(a|a<<4),a=2396745&(a|a<<2)},b.Octree.getMortonNumber=function(a,c,d){return b.Octree.separate3Bit(a)|b.Octree.separate3Bit(c)<<1|b.Octree.separate3Bit(d)<<2},b.Octree.uniqTriangkesfromNodes=function(a){var b,c,d,e,f,g,h=[],i=!1;if(0===a.length)return[];if(1===a.length)return a[0].trianglePool.slice(0);for(b=0,e=a.length;e>b;b++)for(c=0,f=a[b].trianglePool.length;f>c;c++){for(d=0,g=h.length;g>d;d++)a[b].trianglePool[c]===h[d]&&(i=!0);i||h.push(a[b].trianglePool[c]),i=!1}return h},b.OctreeNode=function(b,c,d,e,f){this.tree=b,this.depth=c,this.mortonNumber=d,this.min=new a.Vector3(e.x,e.y,e.z),this.max=new a.Vector3(f.x,f.y,f.z),this.trianglePool=[]},b.OctreeNode.prototype={constructor:b.OctreeNode,getParentNode:function(){return 0===this.depth?null:void this.tree.nodes[this.depth][this.mortonNumber>>3]},getChildNodes:function(){if(this.tree.maxDepth===this.depth)return null;var a=this.mortonNumber<<3;return[this.tree.nodes[this.depth+1][a],this.tree.nodes[this.depth+1][a+1],this.tree.nodes[this.depth+1][a+2],this.tree.nodes[this.depth+1][a+3],this.tree.nodes[this.depth+1][a+4],this.tree.nodes[this.depth+1][a+5],this.tree.nodes[this.depth+1][a+6],this.tree.nodes[this.depth+1][a+7]]}},b.Face=function(a,b,c,d,e){this.a=a.clone(),this.b=b.clone(),this.c=c.clone(),this.normal=d.clone(),this.meshID=e},b.Face.prototype={constructor:b.Face},b.Ray=function(a,b,c){this.origin=a,this.direction=b,this.distance=c}}(THREE,THREEFIELD),function(a){"use strict";THREEFIELD.Collider=function(b,c){var d,e,f,g,h;for(this.mesh=b,this.name=c,this.uuid=a.Math.generateUUID(),this.faces=[],this.normals=[],this.boxes=[],this.boundingSphere=null,this.boundingBox=null,b.updateMatrix(),b.geometry.applyMatrix(b.matrix),b.matrix.identity(),b.position.set(0,0,0),b.rotation.set(0,0,0),b.scale.set(1,1,1),b.geometry.verticesNeedUpdate=!0,b.updateMatrixWorld(),b.geometry.computeFaceNormals(),b.geometry.computeVertexNormals(),d=this.mesh.geometry,null===d.boundingSphere&&d.computeBoundingSphere(),null===d.boundingBox&&d.computeBoundingBox(),this.boundingSphere=d.boundingSphere,this.boundingBox=d.boundingBox,g=0,h=d.faces.length;h>g;g++)e=new a.Triangle(d.vertices[d.faces[g].a],d.vertices[d.faces[g].b],d.vertices[d.faces[g].c]),f=d.faces[g].normal,this.faces.push(e),this.normals.push(f),this.boxes.push(THREEFIELD.triangle.makeBoundingBox(e))}}(THREE,THREEFIELD);